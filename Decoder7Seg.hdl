/** 
 * Decoder7Seg.
 */

CHIP Decoder7Seg {
    IN in[4];
    OUT out[7];

    PARTS:
    // Put your code here: 
	// Use the following pins (w, notw, x, notx, y, noty, z, notz) for easier implementation
	Not(in=in[3],out=notw);	// NOT(w)
	Not(in=notw,out=w);		// w (==out[3])
	Not(in=in[2],out=notx);	// NOT(x)
	Not(in=notx,out=x);		// x (==out[2])
	Not(in=in[1],out=noty);	// NOT(y)
	Not(in=noty,out=y);		// y (==out[1])
	Not(in=in[0],out=notz);	// NOT(z)
	Not(in=notz,out=z);		// z (==out[0])
	
	// Using above code
	// Solve K-map 
	// Simplify in[i]=i, not in[i]= ~i with all i 
	
	//G , out[0] solve 3 + ~1 2 + 1 ~0 + ~2 1
	And(a=noty,b=x,out=g1);
	And(a=y,b=notz,out=g2);
	And(a=notx,b=y,out=g3);
	Or(a=w,b=g1,out=gg1);
	Or(a=g2,b=g3,out=gg2);
	Or(a=gg1,b=gg2,out=out[0]);

	//F , out[1] solve 1 2 + 2 ~3 + 0 ~2 3 + ~0 ~1 ~2
	And(a=y,b=x,out=f1);
	And(a=x,b=notw,out=f2);
	And(a=z,b=notx,out=f3);
	And(a=f3,b=w,out=f4);
	And(a=notz,b=noty,out=f5);
	And(a=f5,b=notx,out=f6);
	Or(a=f1,b=f2,out=ff1);
	Or(a=f4,b=f6,out=ff2);
	Or(a=ff1,b=ff2,out=out[1]);

	//E , out[2] solve 1 3 + ~0 1 + 2 3 + ~0 ~2
	And(a=y,b=w,out=e1);
	And(a=y,b=notz,out=e2);
	And(a=x,b=w,out=e3);
	And(a=notx,b=notz,out=e4);
	Or(a=e1,b=e2,out=ee1);
	Or(a=e3,b=e4,out=ee2);
	Or(a=ee1,b=ee2,out=out[2]);

	//D , out[3] solve ~1 3 + ~0 1 + 1 ~2 + ~0 ~2 +  0 ~1 2
	And(a=w,b=noty,out=d1);
	And(a=y,b=notz,out=d2);
	And(a=notx,b=y,out=d3);
	And(a=notx,b=notz,out=d4);
	And(a=x,b=z,out=d5);
	And(a=d5,b=noty,out=d6);
	Or(a=d1,b=d2,out=dd1);
	Or(a=d3,b=d4,out=dd2);
	Or(a=dd2,b=d6,out=dd3);
	Or(a=dd1,b=dd3,out=out[3]);

	//C , out[4] solve Xor(2,3) + 0 ~1 + ~1 ~3 + 0 ~3
	Xor(a=x,b=w,out=c1);
	And(a=noty,b=z,out=c2);
	And(a=notw,b=noty,out=c3);
	And(a=notw,b=z,out=c4);
	Or(a=c1,b=c2,out=cc1);
	Or(a=c3,b=c4,out=cc2);
	Or(a=cc1,b=cc2,out=out[4]);

	//B , out[5] solve ~2 ~3 + ~0 ~2 + ~3 Xnor(0,1) + 3 Xor(0,1)
	And(a=notw,b=notx,out=b1);
	And(a=notx,b=notz,out=b2);
	Xnor(a=y,b=z,out=b3);
	And(a=notw,b=b3,out=b4);
	Xor(a=y,b=z,out=b5);
	And(a=b5,b=w,out=b6);
	Or(a=b1,b=b2,out=bb1);
	Or(a=b4,b=b6,out=bb2);
	Or(a=bb1,b=bb2,out=out[5]);

	//A , out[6] solve ~0 ~2 + 1 2 + ~1 ~2 3 + 1 ~3 + 0 2 ~3
	And(a=notx,b=notz,out=a1);
	And(a=x,b=y,out=a2);
	And(a=w,b=notx,out=a3);
	And(a=a3,b=noty,out=a4);
	And(a=notw,b=y,out=a5);
	And(a=notw,b=x,out=a6);
	And(a=a6,b=z,out=a7);
	Or(a=a1,b=a2,out=aa1);
	Or(a=a4,b=a5,out=aa2);
	Or(a=aa2,b=a7,out=aa3);
	Or(a=aa1,b=aa3,out=out[6]);


}
